import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.DpOsACmt.js";const u=JSON.parse('{"title":"Shuttle.Core.Json","description":"","frontmatter":{},"headers":[],"relativePath":"shuttle-core/serialization/shuttle-core-json.md","filePath":"shuttle-core/serialization/shuttle-core-json.md"}'),t={name:"shuttle-core/serialization/shuttle-core-json.md"},n=e(`<h1 id="shuttle-core-json" tabindex="-1">Shuttle.Core.Json <a class="header-anchor" href="#shuttle-core-json" aria-label="Permalink to &quot;Shuttle.Core.Json&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>PM&gt; Install-Package Shuttle.Core.Json</span></span></code></pre></div><p>A <code>System.Text.Json</code> implementation of the <code>ISerializer</code> interface.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddJsonSerializer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	builder.Options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JsonSerializerOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	// or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	buidler.Options.option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>The <code>builder.Options</code> is of type <a href="https://docs.microsoft.com/en-us/dotnet/api/system.text.json.jsonserializeroptions?view=net-6.0" target="_blank" rel="noreferrer">JsonSerializerOptions</a>.</p>`,6),l=[n];function o(p,h,r,c,d,k){return a(),i("div",null,l)}const g=s(t,[["render",o]]);export{u as __pageData,g as default};
