import{_ as s,c as e,o as a,a4 as i}from"./chunks/framework.DpOsACmt.js";const u=JSON.parse('{"title":"Message Sender","description":"","frontmatter":{},"headers":[],"relativePath":"shuttle-esb/components/message-sender.md","filePath":"shuttle-esb/components/message-sender.md"}'),t={name:"shuttle-esb/components/message-sender.md"},n=i('<h1 id="message-sender" tabindex="-1">Message Sender <a class="header-anchor" href="#message-sender" aria-label="Permalink to &quot;Message Sender&quot;">​</a></h1><p>The purpose of the <code>IMessageSender</code> is to abstract sending and publishing capabilities. The <code>MessageSender</code> class provides the actual implementation and both the <code>ServiceBus</code> and <code>HandlerContext</code> classes hold a reference to a <code>MessageSender</code>.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="dispatch" tabindex="-1">Dispatch <a class="header-anchor" href="#dispatch" aria-label="Permalink to &quot;Dispatch&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dispatch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transportMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transportMessageReceived</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>This method invokes the <code>DispatchTransportMessagePipeline</code> to have the given <code>TransportMessage</code> eventually enqueued on the target queue as specified by the <code>RecipientInboxWorkQueueUri</code> of the <code>TransportMessage</code>. If this <code>Dispatch</code> takes place in response to the processing of received <code>TransportMessage</code> then the <code>transportMessageReceived</code> should be the received message; else it is <code>null</code>.</p><h3 id="send" tabindex="-1">Send <a class="header-anchor" href="#send" aria-label="Permalink to &quot;Send&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transportMessageReceived</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessageBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Creates and then dispatches a <code>TransportMessage</code> using the message routing as configured. The newly instantiated <code>TransportMessage</code> is returned. The same <code>transportMessageReceived</code> processing applies as to the <code>Dispatch</code>. The <code>builder</code> allows you to customize the newly created <code>TransportMessage</code>.</p><h3 id="publish" tabindex="-1">Publish <a class="header-anchor" href="#publish" aria-label="Permalink to &quot;Publish&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IEnumerable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Publish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessage</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> transportMessageReceived</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Action</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TransportMessageBuilder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Creates and then dispatches a <code>TransportMessage</code> to all URIs returned from the registered <code>ISubscriptionService</code>. The same <code>transportMessageReceived</code> processing applies as to the <code>Dispatch</code>. The <code>builder</code> allows you to customize the newly created <code>TransportMessage</code>.</p><p>All the instantiated <code>TransportMessage</code> instances are returned, with one message for each of relevant <code>RecipientInboxWorkQueueUri</code> that was subscribed to.</p>',13),h=[n];function d(o,r,p,l,c,k){return a(),e("div",null,h)}const E=s(t,[["render",d]]);export{u as __pageData,E as default};
