import{_ as e,c as a,o as i,a4 as s}from"./chunks/framework.BvIE6Ka-.js";const g=JSON.parse('{"title":"Service Bus Policy","description":"","frontmatter":{},"headers":[],"relativePath":"shuttle-esb/components/service-bus-policy.md","filePath":"shuttle-esb/components/service-bus-policy.md"}'),t={name:"shuttle-esb/components/service-bus-policy.md"},l=s('<h1 id="service-bus-policy" tabindex="-1">Service Bus Policy <a class="header-anchor" href="#service-bus-policy" aria-label="Permalink to &quot;Service Bus Policy&quot;">​</a></h1><p>An implementation of the <code>IServiceBusPolicy</code> interface is used to evaluate failures and determine whether the failure should be retried.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="evaluatemessagehandlingfailure" tabindex="-1">EvaluateMessageHandlingFailure <a class="header-anchor" href="#evaluatemessagehandlingfailure" aria-label="Permalink to &quot;EvaluateMessageHandlingFailure&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MessageFailureAction</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EvaluateMessageHandlingFailure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OnPipelineException</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pipelineEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="evaluateoutboxfailure" tabindex="-1">EvaluateOutboxFailure <a class="header-anchor" href="#evaluateoutboxfailure" aria-label="Permalink to &quot;EvaluateOutboxFailure&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MessageFailureAction</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EvaluateOutboxFailure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OnPipelineException</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pipelineEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',7),n=[l];function o(h,r,c,p,d,u){return i(),a("div",null,n)}const v=e(t,[["render",o]]);export{g as __pageData,v as default};
