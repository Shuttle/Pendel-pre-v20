import{_ as e,c as s,o as i,a4 as a}from"./chunks/framework.BvIE6Ka-.js";const u=JSON.parse('{"title":"Sql Server","description":"","frontmatter":{},"headers":[],"relativePath":"shuttle-recall/events/sql.md","filePath":"shuttle-recall/events/sql.md"}'),t={name:"shuttle-recall/events/sql.md"},n=a(`<h1 id="sql-server" tabindex="-1">Sql Server <a class="header-anchor" href="#sql-server" aria-label="Permalink to &quot;Sql Server&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>PM&gt; Install-Package Shuttle.Recall.Sql.Storage</span></span></code></pre></div><p>A Sql Server implementation of the <code>Shuttle.Recall</code> event sourcing <code>EventStore</code>.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">services.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AddSqlEventStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-label="Permalink to &quot;Database&quot;">​</a></h2><p>In order to create the relevant database structures execute the relevant <code>EventStoreCreate.sql</code> script:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>%userprofile%\\.nuget\\packages\\shuttle.recall.sql.storage\\{version}\\scripts\\{provider}\\EventStoreCreate.sql</span></span></code></pre></div><h2 id="supported-providers" tabindex="-1">Supported providers <a class="header-anchor" href="#supported-providers" aria-label="Permalink to &quot;Supported providers&quot;">​</a></h2><ul><li><code>Microsoft.Data.SqlClient</code></li><li><code>System.Data.SqlClient</code></li></ul><p>If you&#39;d like support for another SQL-based provider please feel free to give it a bash and send a pull request if you <em>do</em> go this route. You are welcome to create an issue and assistance will be provided where possible.</p><h2 id="ikeystore" tabindex="-1">IKeyStore <a class="header-anchor" href="#ikeystore" aria-label="Permalink to &quot;IKeyStore&quot;">​</a></h2><p>You are bound to run into situations where you have a business or other key that is required to be unique. Given that the <code>IEventStore</code> makes use of only surrogate keys the <code>IKeyStore</code> is used to create a unique list of keys associated with a given aggregate identifier.</p><p>Since the keys used in the key store have to be unique you should ensure that they contain enough information to be unique and have the intended meaning.</p><p>A key could be something such as <code>[order-number]:ord-001/2016</code>, <code>[customer-onboarding]:id-number=0000005555089</code>, or <code>[system-name/profile]:672cda1c-c3ec-4f81-a577-e64f9f14e141</code>.</p><h3 id="contains" tabindex="-1">Contains <a class="header-anchor" href="#contains" aria-label="Permalink to &quot;Contains&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Returns <code>true</code> if the given <code>key</code> has an associated aggregate identifier.</p><hr><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Guid</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Returns <code>true</code> if the given <code>id</code> is present in the key store.</p><hr><h3 id="get" tabindex="-1">Get <a class="header-anchor" href="#get" aria-label="Permalink to &quot;Get&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Guid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Returns the <code>Guid</code> associated with the given key; else <code>null</code>.</p><hr><h3 id="remove" tabindex="-1">Remove <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;Remove&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Guid</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>When specifying the <code>key</code> the assocation with the identifier will be removed. When specifying the <code>id</code> all keys associated with the given <code>id</code> will be removed.</p><hr><h3 id="add" tabindex="-1">Add <a class="header-anchor" href="#add" aria-label="Permalink to &quot;Add&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Guid</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Creates an association between the <code>id</code> and the <code>key</code>.</p><hr><h3 id="add-1" tabindex="-1">Add <a class="header-anchor" href="#add-1" aria-label="Permalink to &quot;Add&quot;">​</a></h3><div class="language-c# vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c#</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rekey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rekey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Changes <code>key</code> to a new key specified by <code>rekey</code>.</p>`,37),h=[n];function l(o,d,r,p,c,k){return i(),s("div",null,h)}const y=e(t,[["render",l]]);export{u as __pageData,y as default};
